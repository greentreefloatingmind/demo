package com.carrera.consumer.examples;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

/**
 * @author yaping
 * @date 2020/4/3
 *
 *
 * 问题：获得／使用java多线程的方法
 *
 * 1. extends Thread
 * 2.implements Runnable
 * 3. implements Callable
 * 4. 通过线程池
 *
 *
 */
public class MyThreadPoolDemo {

    public static void main(String[] args) {

        ExecutorService threadPool1 = Executors.newFixedThreadPool(5);//一池5个处理线程
        ExecutorService threadPool2 = Executors.newSingleThreadExecutor();//单线程
        ExecutorService threadPool = Executors.newCachedThreadPool(); //一池N个线程



        //模拟10个用户来办理业务，每个用户就是一个外部请求
        try{


            for (int i = 0; i < 10; i++) {
                threadPool.execute(()->{
                    System.out.println(Thread.currentThread().getName()+"\t 办理业务 ");

                    try{
                        TimeUnit.SECONDS.sleep(3);
                    }catch (Exception e){e.printStackTrace();}
                });
            }




        }catch (Exception e){
            e.printStackTrace();
        }finally {
            threadPool.shutdown();
        }
    }
}
